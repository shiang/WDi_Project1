'use strict';

exports.__esModule = true;
exports.PoseParentContext = undefined;

var _extends = Object.assign || function (target) { for (var i = 1; i < arguments.length; i++) { var source = arguments[i]; for (var key in source) { if (Object.prototype.hasOwnProperty.call(source, key)) { target[key] = source[key]; } } } return target; };

var _react = require('react');

var _react2 = _interopRequireDefault(_react);

var _utils = require('./utils');

var _popmotionPose = require('popmotion-pose');

var _popmotionPose2 = _interopRequireDefault(_popmotionPose);

function _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { default: obj }; }

function _objectWithoutProperties(obj, keys) { var target = {}; for (var i in obj) { if (keys.indexOf(i) >= 0) continue; if (!Object.prototype.hasOwnProperty.call(obj, i)) continue; target[i] = obj[i]; } return target; }

function _classCallCheck(instance, Constructor) { if (!(instance instanceof Constructor)) { throw new TypeError("Cannot call a class as a function"); } }

function _possibleConstructorReturn(self, call) { if (!self) { throw new ReferenceError("this hasn't been initialised - super() hasn't been called"); } return call && (typeof call === "object" || typeof call === "function") ? call : self; }

function _inherits(subClass, superClass) { if (typeof superClass !== "function" && superClass !== null) { throw new TypeError("Super expression must either be null or a function, not " + typeof superClass); } subClass.prototype = Object.create(superClass && superClass.prototype, { constructor: { value: subClass, enumerable: false, writable: true, configurable: true } }); if (superClass) Object.setPrototypeOf ? Object.setPrototypeOf(subClass, superClass) : subClass.__proto__ = superClass; }

var PoseParentContext = exports.PoseParentContext = _react2.default.createContext({});

var PoseElement = function (_React$PureComponent) {
  _inherits(PoseElement, _React$PureComponent);

  function PoseElement(props) {
    _classCallCheck(this, PoseElement);

    var _this = _possibleConstructorReturn(this, _React$PureComponent.call(this, props));

    _this.setRef = function (ref) {
      return _this.ref = ref;
    };

    _this.children = new Set();
    _this.childrenHandlers = {
      onMount: function onMount(child) {
        return _this.children.add(child);
      },
      onUnmount: function onUnmount(child) {
        _this.children.remove(child);
        _this.poser.removeChild(child);
      },
      getCurrentFromParent: function getCurrentFromParent() {
        return _this.props.current;
      }

      /**
       * Prop selectors
       * =============================================
       */
    };
    var poses = props.poses,
        current = props.current,
        getCurrentFromParent = props.getCurrentFromParent;

    var currentPose = _this.getInitialPose();
    _this.style = poses && currentPose ? (0, _utils.posesToStyles)(poses[currentPose]) : {};
    return _this;
  }

  /**
   * Lifecycle
   * =============================================
   */


  PoseElement.prototype.componentDidMount = function componentDidMount() {
    var _this2 = this;

    if (!this.ref) return;

    this.poser = (0, _popmotionPose2.default)(this.ref, this.getPoseProps());
    var onMount = this.props.onMount;

    if (onMount) onMount(this.poser);
    if (this.children.size) this.children.forEach(function (child) {
      return _this2.poser.addChild(child);
    });
  };

  PoseElement.prototype.componentDidUpdate = function componentDidUpdate(_ref) {
    var prevCurrent = _ref.current;
    var current = this.props.current;

    if (prevCurrent !== current) this.poser.set(current);
  };

  PoseElement.prototype.componentWillUnmount = function componentWillUnmount() {
    if (!this.poser) return;

    var onUnmount = this.props.onUnmount;

    if (onUnmount) onUnmount(this.poser);
    this.poser.destroy();
  };

  /**
   * Children handlers
   * =============================================
   */


  PoseElement.prototype.getPoseProps = function getPoseProps() {
    var _props = this.props,
        elementType = _props.elementType,
        children = _props.children,
        draggable = _props.draggable,
        poses = _props.poses;


    return _extends({
      draggable: draggable,
      initialPose: this.getInitialPose()
    }, poses);
  };

  PoseElement.prototype.getDomProps = function getDomProps(_ref2) {
    var draggable = _ref2.draggable,
        poses = _ref2.poses,
        current = _ref2.current,
        style = _ref2.style,
        onMount = _ref2.onMount,
        onUnmount = _ref2.onUnmount,
        getCurrentFromParent = _ref2.getCurrentFromParent,
        props = _objectWithoutProperties(_ref2, ['draggable', 'poses', 'current', 'style', 'onMount', 'onUnmount', 'getCurrentFromParent']);

    props.style = _extends({}, style, this.style);
    props.ref = this.setRef;
    return props;
  };

  PoseElement.prototype.getInitialPose = function getInitialPose() {
    var _props2 = this.props,
        current = _props2.current,
        getCurrentFromParent = _props2.getCurrentFromParent;

    return current ? current : getCurrentFromParent ? getCurrentFromParent() : undefined;
  };

  PoseElement.prototype.render = function render() {
    var _props3 = this.props,
        elementType = _props3.elementType,
        children = _props3.children,
        remaining = _objectWithoutProperties(_props3, ['elementType', 'children']);

    return _react2.default.createElement(
      PoseParentContext.Provider,
      { value: this.childrenHandlers },
      _react2.default.createElement.apply(_react2.default, [elementType, this.getDomProps(remaining)].concat(children))
    );
  };

  return PoseElement;
}(_react2.default.PureComponent);

exports.default = PoseElement;
//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbIi4uL3NyYy9Qb3NlRWxlbWVudC5qcyJdLCJuYW1lcyI6WyJQb3NlUGFyZW50Q29udGV4dCIsImNyZWF0ZUNvbnRleHQiLCJQb3NlRWxlbWVudCIsInByb3BzIiwic2V0UmVmIiwicmVmIiwiY2hpbGRyZW4iLCJTZXQiLCJjaGlsZHJlbkhhbmRsZXJzIiwib25Nb3VudCIsImFkZCIsImNoaWxkIiwib25Vbm1vdW50IiwicmVtb3ZlIiwicG9zZXIiLCJyZW1vdmVDaGlsZCIsImdldEN1cnJlbnRGcm9tUGFyZW50IiwiY3VycmVudCIsInBvc2VzIiwiY3VycmVudFBvc2UiLCJnZXRJbml0aWFsUG9zZSIsInN0eWxlIiwiY29tcG9uZW50RGlkTW91bnQiLCJnZXRQb3NlUHJvcHMiLCJzaXplIiwiZm9yRWFjaCIsImFkZENoaWxkIiwiY29tcG9uZW50RGlkVXBkYXRlIiwicHJldkN1cnJlbnQiLCJzZXQiLCJjb21wb25lbnRXaWxsVW5tb3VudCIsImRlc3Ryb3kiLCJlbGVtZW50VHlwZSIsImRyYWdnYWJsZSIsImluaXRpYWxQb3NlIiwiZ2V0RG9tUHJvcHMiLCJ1bmRlZmluZWQiLCJyZW5kZXIiLCJyZW1haW5pbmciLCJjcmVhdGVFbGVtZW50IiwiUHVyZUNvbXBvbmVudCJdLCJtYXBwaW5ncyI6Ijs7Ozs7OztBQUFBOzs7O0FBQ0E7O0FBQ0E7Ozs7Ozs7Ozs7Ozs7O0FBRU8sSUFBTUEsZ0RBQW9CLGdCQUFNQyxhQUFOLENBQW9CLEVBQXBCLENBQTFCOztJQUVjQyxXOzs7QUFDbkIsdUJBQVlDLEtBQVosRUFBbUI7QUFBQTs7QUFBQSxpREFDakIsZ0NBQU1BLEtBQU4sQ0FEaUI7O0FBQUEsVUFpQ25CQyxNQWpDbUIsR0FpQ1Y7QUFBQSxhQUFPLE1BQUtDLEdBQUwsR0FBV0EsR0FBbEI7QUFBQSxLQWpDVTs7QUFBQSxVQXVDbkJDLFFBdkNtQixHQXVDUixJQUFJQyxHQUFKLEVBdkNRO0FBQUEsVUF3Q25CQyxnQkF4Q21CLEdBd0NBO0FBQ2pCQyxlQUFTO0FBQUEsZUFBUyxNQUFLSCxRQUFMLENBQWNJLEdBQWQsQ0FBa0JDLEtBQWxCLENBQVQ7QUFBQSxPQURRO0FBRWpCQyxpQkFBVywwQkFBUztBQUNsQixjQUFLTixRQUFMLENBQWNPLE1BQWQsQ0FBcUJGLEtBQXJCO0FBQ0EsY0FBS0csS0FBTCxDQUFXQyxXQUFYLENBQXVCSixLQUF2QjtBQUNELE9BTGdCO0FBTWpCSyw0QkFBc0I7QUFBQSxlQUFNLE1BQUtiLEtBQUwsQ0FBV2MsT0FBakI7QUFBQTs7QUFHeEI7Ozs7QUFUbUIsS0F4Q0E7QUFBQSxRQUVUQyxLQUZTLEdBRWdDZixLQUZoQyxDQUVUZSxLQUZTO0FBQUEsUUFFRkQsT0FGRSxHQUVnQ2QsS0FGaEMsQ0FFRmMsT0FGRTtBQUFBLFFBRU9ELG9CQUZQLEdBRWdDYixLQUZoQyxDQUVPYSxvQkFGUDs7QUFHakIsUUFBTUcsY0FBYyxNQUFLQyxjQUFMLEVBQXBCO0FBQ0EsVUFBS0MsS0FBTCxHQUFhSCxTQUFTQyxXQUFULEdBQXVCLDBCQUFjRCxNQUFNQyxXQUFOLENBQWQsQ0FBdkIsR0FBMkQsRUFBeEU7QUFKaUI7QUFLbEI7O0FBRUQ7Ozs7Ozt3QkFJQUcsaUIsZ0NBQW9CO0FBQUE7O0FBQ2xCLFFBQUksQ0FBQyxLQUFLakIsR0FBVixFQUFlOztBQUVmLFNBQUtTLEtBQUwsR0FBYSw2QkFBSyxLQUFLVCxHQUFWLEVBQWUsS0FBS2tCLFlBQUwsRUFBZixDQUFiO0FBSGtCLFFBSVZkLE9BSlUsR0FJRSxLQUFLTixLQUpQLENBSVZNLE9BSlU7O0FBS2xCLFFBQUlBLE9BQUosRUFBYUEsUUFBUSxLQUFLSyxLQUFiO0FBQ2IsUUFBSSxLQUFLUixRQUFMLENBQWNrQixJQUFsQixFQUF3QixLQUFLbEIsUUFBTCxDQUFjbUIsT0FBZCxDQUFzQjtBQUFBLGFBQVMsT0FBS1gsS0FBTCxDQUFXWSxRQUFYLENBQW9CZixLQUFwQixDQUFUO0FBQUEsS0FBdEI7QUFDekIsRzs7d0JBRURnQixrQixxQ0FBNkM7QUFBQSxRQUFmQyxXQUFlLFFBQXhCWCxPQUF3QjtBQUFBLFFBQ25DQSxPQURtQyxHQUN2QixLQUFLZCxLQURrQixDQUNuQ2MsT0FEbUM7O0FBRTNDLFFBQUlXLGdCQUFnQlgsT0FBcEIsRUFBNkIsS0FBS0gsS0FBTCxDQUFXZSxHQUFYLENBQWVaLE9BQWY7QUFDOUIsRzs7d0JBRURhLG9CLG1DQUF1QjtBQUNyQixRQUFJLENBQUMsS0FBS2hCLEtBQVYsRUFBaUI7O0FBREksUUFHYkYsU0FIYSxHQUdDLEtBQUtULEtBSE4sQ0FHYlMsU0FIYTs7QUFJckIsUUFBSUEsU0FBSixFQUFlQSxVQUFVLEtBQUtFLEtBQWY7QUFDZixTQUFLQSxLQUFMLENBQVdpQixPQUFYO0FBQ0QsRzs7QUFJRDs7Ozs7O3dCQWtCQVIsWSwyQkFBZTtBQUFBLGlCQUN1QyxLQUFLcEIsS0FENUM7QUFBQSxRQUNMNkIsV0FESyxVQUNMQSxXQURLO0FBQUEsUUFDUTFCLFFBRFIsVUFDUUEsUUFEUjtBQUFBLFFBQ2tCMkIsU0FEbEIsVUFDa0JBLFNBRGxCO0FBQUEsUUFDNkJmLEtBRDdCLFVBQzZCQSxLQUQ3Qjs7O0FBR2I7QUFDRWUsMEJBREY7QUFFRUMsbUJBQWEsS0FBS2QsY0FBTDtBQUZmLE9BR0tGLEtBSEw7QUFLRCxHOzt3QkFFRGlCLFcsK0JBU0c7QUFBQSxRQVJERixTQVFDLFNBUkRBLFNBUUM7QUFBQSxRQVBEZixLQU9DLFNBUERBLEtBT0M7QUFBQSxRQU5ERCxPQU1DLFNBTkRBLE9BTUM7QUFBQSxRQUxESSxLQUtDLFNBTERBLEtBS0M7QUFBQSxRQUpEWixPQUlDLFNBSkRBLE9BSUM7QUFBQSxRQUhERyxTQUdDLFNBSERBLFNBR0M7QUFBQSxRQUZESSxvQkFFQyxTQUZEQSxvQkFFQztBQUFBLFFBREViLEtBQ0Y7O0FBQ0RBLFVBQU1rQixLQUFOLGdCQUFtQkEsS0FBbkIsRUFBNkIsS0FBS0EsS0FBbEM7QUFDQWxCLFVBQU1FLEdBQU4sR0FBWSxLQUFLRCxNQUFqQjtBQUNBLFdBQU9ELEtBQVA7QUFDRCxHOzt3QkFFRGlCLGMsNkJBQWlCO0FBQUEsa0JBQzJCLEtBQUtqQixLQURoQztBQUFBLFFBQ1BjLE9BRE8sV0FDUEEsT0FETztBQUFBLFFBQ0VELG9CQURGLFdBQ0VBLG9CQURGOztBQUVmLFdBQVFDLE9BQUQsR0FBWUEsT0FBWixHQUF1QkQsb0JBQUQsR0FBeUJBLHNCQUF6QixHQUFrRG9CLFNBQS9FO0FBQ0QsRzs7d0JBRURDLE0scUJBQVM7QUFBQSxrQkFDeUMsS0FBS2xDLEtBRDlDO0FBQUEsUUFDQzZCLFdBREQsV0FDQ0EsV0FERDtBQUFBLFFBQ2MxQixRQURkLFdBQ2NBLFFBRGQ7QUFBQSxRQUMyQmdDLFNBRDNCOztBQUdQLFdBQ0U7QUFBQyx1QkFBRCxDQUFtQixRQUFuQjtBQUFBLFFBQTRCLE9BQU8sS0FBSzlCLGdCQUF4QztBQUNHLHNCQUFNK0IsYUFBTix5QkFDQ1AsV0FERCxFQUVDLEtBQUtHLFdBQUwsQ0FBaUJHLFNBQWpCLENBRkQsU0FHSWhDLFFBSEo7QUFESCxLQURGO0FBU0QsRzs7O0VBaEdzQyxnQkFBTWtDLGE7O2tCQUExQnRDLFciLCJmaWxlIjoiUG9zZUVsZW1lbnQuanMiLCJzb3VyY2VzQ29udGVudCI6WyJpbXBvcnQgUmVhY3QgZnJvbSAncmVhY3QnO1xuaW1wb3J0IHsgcG9zZXNUb1N0eWxlcyB9IGZyb20gJy4vdXRpbHMnO1xuaW1wb3J0IHBvc2UgZnJvbSAncG9wbW90aW9uLXBvc2UnO1xuXG5leHBvcnQgY29uc3QgUG9zZVBhcmVudENvbnRleHQgPSBSZWFjdC5jcmVhdGVDb250ZXh0KHt9KTtcblxuZXhwb3J0IGRlZmF1bHQgY2xhc3MgUG9zZUVsZW1lbnQgZXh0ZW5kcyBSZWFjdC5QdXJlQ29tcG9uZW50IHtcbiAgY29uc3RydWN0b3IocHJvcHMpIHtcbiAgICBzdXBlcihwcm9wcyk7XG4gICAgY29uc3QgeyBwb3NlcywgY3VycmVudCwgZ2V0Q3VycmVudEZyb21QYXJlbnQgfSA9IHByb3BzO1xuICAgIGNvbnN0IGN1cnJlbnRQb3NlID0gdGhpcy5nZXRJbml0aWFsUG9zZSgpO1xuICAgIHRoaXMuc3R5bGUgPSBwb3NlcyAmJiBjdXJyZW50UG9zZSA/IHBvc2VzVG9TdHlsZXMocG9zZXNbY3VycmVudFBvc2VdKSA6IHt9O1xuICB9XG5cbiAgLyoqXG4gICAqIExpZmVjeWNsZVxuICAgKiA9PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT1cbiAgICovXG4gIGNvbXBvbmVudERpZE1vdW50KCkge1xuICAgIGlmICghdGhpcy5yZWYpIHJldHVybjtcblxuICAgIHRoaXMucG9zZXIgPSBwb3NlKHRoaXMucmVmLCB0aGlzLmdldFBvc2VQcm9wcygpKTtcbiAgICBjb25zdCB7IG9uTW91bnQgfSA9IHRoaXMucHJvcHM7XG4gICAgaWYgKG9uTW91bnQpIG9uTW91bnQodGhpcy5wb3Nlcik7XG4gICAgaWYgKHRoaXMuY2hpbGRyZW4uc2l6ZSkgdGhpcy5jaGlsZHJlbi5mb3JFYWNoKGNoaWxkID0+IHRoaXMucG9zZXIuYWRkQ2hpbGQoY2hpbGQpKTtcbiAgfVxuXG4gIGNvbXBvbmVudERpZFVwZGF0ZSh7IGN1cnJlbnQ6IHByZXZDdXJyZW50IH0pIHtcbiAgICBjb25zdCB7IGN1cnJlbnQgfSA9IHRoaXMucHJvcHM7XG4gICAgaWYgKHByZXZDdXJyZW50ICE9PSBjdXJyZW50KSB0aGlzLnBvc2VyLnNldChjdXJyZW50KTtcbiAgfVxuXG4gIGNvbXBvbmVudFdpbGxVbm1vdW50KCkge1xuICAgIGlmICghdGhpcy5wb3NlcikgcmV0dXJuO1xuXG4gICAgY29uc3QgeyBvblVubW91bnQgfSA9IHRoaXMucHJvcHM7XG4gICAgaWYgKG9uVW5tb3VudCkgb25Vbm1vdW50KHRoaXMucG9zZXIpO1xuICAgIHRoaXMucG9zZXIuZGVzdHJveSgpO1xuICB9XG5cbiAgc2V0UmVmID0gcmVmID0+IHRoaXMucmVmID0gcmVmO1xuXG4gIC8qKlxuICAgKiBDaGlsZHJlbiBoYW5kbGVyc1xuICAgKiA9PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT1cbiAgICovXG4gIGNoaWxkcmVuID0gbmV3IFNldCgpO1xuICBjaGlsZHJlbkhhbmRsZXJzID0ge1xuICAgIG9uTW91bnQ6IGNoaWxkID0+IHRoaXMuY2hpbGRyZW4uYWRkKGNoaWxkKSxcbiAgICBvblVubW91bnQ6IGNoaWxkID0+IHtcbiAgICAgIHRoaXMuY2hpbGRyZW4ucmVtb3ZlKGNoaWxkKTtcbiAgICAgIHRoaXMucG9zZXIucmVtb3ZlQ2hpbGQoY2hpbGQpO1xuICAgIH0sXG4gICAgZ2V0Q3VycmVudEZyb21QYXJlbnQ6ICgpID0+IHRoaXMucHJvcHMuY3VycmVudFxuICB9XG5cbiAgLyoqXG4gICAqIFByb3Agc2VsZWN0b3JzXG4gICAqID09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PVxuICAgKi9cbiAgZ2V0UG9zZVByb3BzKCkge1xuICAgIGNvbnN0IHsgZWxlbWVudFR5cGUsIGNoaWxkcmVuLCBkcmFnZ2FibGUsIHBvc2VzIH0gPSB0aGlzLnByb3BzO1xuXG4gICAgcmV0dXJuIHtcbiAgICAgIGRyYWdnYWJsZSxcbiAgICAgIGluaXRpYWxQb3NlOiB0aGlzLmdldEluaXRpYWxQb3NlKCksXG4gICAgICAuLi5wb3Nlc1xuICAgIH07XG4gIH1cblxuICBnZXREb21Qcm9wcyh7XG4gICAgZHJhZ2dhYmxlLFxuICAgIHBvc2VzLFxuICAgIGN1cnJlbnQsXG4gICAgc3R5bGUsXG4gICAgb25Nb3VudCxcbiAgICBvblVubW91bnQsXG4gICAgZ2V0Q3VycmVudEZyb21QYXJlbnQsXG4gICAgLi4ucHJvcHNcbiAgfSkge1xuICAgIHByb3BzLnN0eWxlID0geyAuLi5zdHlsZSwgLi4udGhpcy5zdHlsZSB9O1xuICAgIHByb3BzLnJlZiA9IHRoaXMuc2V0UmVmO1xuICAgIHJldHVybiBwcm9wcztcbiAgfVxuICBcbiAgZ2V0SW5pdGlhbFBvc2UoKSB7XG4gICAgY29uc3QgeyBjdXJyZW50LCBnZXRDdXJyZW50RnJvbVBhcmVudCB9ID0gdGhpcy5wcm9wcztcbiAgICByZXR1cm4gKGN1cnJlbnQpID8gY3VycmVudCA6IChnZXRDdXJyZW50RnJvbVBhcmVudCkgPyBnZXRDdXJyZW50RnJvbVBhcmVudCgpIDogdW5kZWZpbmVkO1xuICB9XG5cbiAgcmVuZGVyKCkge1xuICAgIGNvbnN0IHsgZWxlbWVudFR5cGUsIGNoaWxkcmVuLCAuLi5yZW1haW5pbmcgfSA9IHRoaXMucHJvcHM7XG5cbiAgICByZXR1cm4gKFxuICAgICAgPFBvc2VQYXJlbnRDb250ZXh0LlByb3ZpZGVyIHZhbHVlPXt0aGlzLmNoaWxkcmVuSGFuZGxlcnN9PlxuICAgICAgICB7UmVhY3QuY3JlYXRlRWxlbWVudChcbiAgICAgICAgICBlbGVtZW50VHlwZSxcbiAgICAgICAgICB0aGlzLmdldERvbVByb3BzKHJlbWFpbmluZyksXG4gICAgICAgICAgLi4uY2hpbGRyZW5cbiAgICAgICAgKX1cbiAgICAgIDwvUG9zZVBhcmVudENvbnRleHQuUHJvdmlkZXI+XG4gICAgKTtcbiAgfVxufVxuIl19